syntax = "proto3";

import "Message.proto";

option java_multiple_files = true;
option java_package = "bifrore.processor.rpc.proto";
option java_outer_classname = "ProcessorServiceProto";
option optimize_for = SPEED;

package processorservice;

service ProcessorService {
  rpc subscribe(SubscribeRequest) returns (SubscribeResponse) {}
  rpc unsubscribe(UnsubscribeRequest) returns (UnsubscribeResponse) {}
  rpc addDestination(AddDestinationRequest) returns(AddDestinationResponse) {}
}

message SubscribeRequest {
  uint64 reqId = 1;
  string topicFilter = 2;
  commontype.QoS qos = 3;
}

message SubscribeResponse {
  enum Code {
    OK = 0;
    ERROR = 1;
  }
  uint64 reqId = 1;
  Code code = 2;
  optional string reason = 3;
}

message UnsubscribeRequest {
  uint64 reqId = 1;
  string topicFilter = 2;
}

message UnsubscribeResponse {
  enum Code {
    OK = 0;
    ERROR = 1;
  }
  uint64 reqId = 1;
  Code code = 2;
  optional string reason = 3;
}

message AddDestinationRequest {
  uint64 reqId = 1;
  string destinationType = 2;
  map<string, string> destinationCfg = 3;
}

message AddDestinationResponse {
  enum Code {
    OK = 0;
    ERROR = 1;
  }
  uint64 reqId = 1;
  Code code = 2;
  string destinationId = 3;
  optional string reason = 4;
}