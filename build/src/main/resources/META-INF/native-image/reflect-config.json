[
{
  "name":"[B"
},
{
  "name":"[C"
},
{
  "name":"[D"
},
{
  "name":"[F"
},
{
  "name":"[I"
},
{
  "name":"[J"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljavax.management.openmbean.CompositeData;"
},
{
  "name":"[Lsun.security.pkcs.SignerInfo;"
},
{
  "name":"[S"
},
{
  "name":"[Z"
},
{
  "name":"android.app.Application"
},
{
  "name":"apple.security.AppleProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"bifrore.admin.worker.handler.AddDestinationHandler",
  "queryAllPublicMethods":true
},
{
  "name":"bifrore.admin.worker.handler.AddRuleHandler",
  "queryAllPublicMethods":true
},
{
  "name":"bifrore.admin.worker.handler.DeleteDestinationHandler",
  "queryAllPublicMethods":true
},
{
  "name":"bifrore.admin.worker.handler.DeleteRuleHandler",
  "queryAllPublicMethods":true
},
{
  "name":"bifrore.admin.worker.handler.ListDestinationHandler",
  "queryAllPublicMethods":true
},
{
  "name":"bifrore.admin.worker.handler.ListRuleHandler",
  "queryAllPublicMethods":true
},
{
  "name":"bifrore.admin.worker.http.AddDestinationHttpRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.util.Map"] }]
},
{
  "name":"bifrore.baserpc.clock.HLC",
  "fields":[{"name":"hlc"}]
},
{
  "name":"bifrore.starter.StandaloneStarter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"bifrore.starter.config.StandaloneConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getAdminServerPort","parameterTypes":[] }, {"name":"getClusterConfig","parameterTypes":[] }, {"name":"getProcessorWorkerConfig","parameterTypes":[] }, {"name":"getPromExporterPort","parameterTypes":[] }, {"name":"getRpcClientConfig","parameterTypes":[] }, {"name":"getRpcServerConfig","parameterTypes":[] }, {"name":"setAdminServerPort","parameterTypes":["int"] }, {"name":"setClusterConfig","parameterTypes":["bifrore.starter.config.model.ClusterConfig"] }, {"name":"setProcessorWorkerConfig","parameterTypes":["bifrore.starter.config.model.ProcessorWorkerConfig"] }, {"name":"setPromExporterPort","parameterTypes":["int"] }, {"name":"setRpcServerConfig","parameterTypes":["bifrore.starter.config.model.RPCServerConfig"] }]
},
{
  "name":"bifrore.starter.config.model.ClusterConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getClusterName","parameterTypes":[] }, {"name":"getMemberAddress","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"setClusterName","parameterTypes":["java.lang.String"] }, {"name":"setMemberAddress","parameterTypes":["java.lang.String"] }, {"name":"setPort","parameterTypes":["int"] }]
},
{
  "name":"bifrore.starter.config.model.ProcessorWorkerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getBrokerHost","parameterTypes":[] }, {"name":"getBrokerPort","parameterTypes":[] }, {"name":"getClientNum","parameterTypes":[] }, {"name":"getClientPrefix","parameterTypes":[] }, {"name":"getGroupName","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getSessionExpiryInterval","parameterTypes":[] }, {"name":"getUserName","parameterTypes":[] }, {"name":"isCleanStart","parameterTypes":[] }, {"name":"isOrdered","parameterTypes":[] }, {"name":"setBrokerHost","parameterTypes":["java.lang.String"] }, {"name":"setBrokerPort","parameterTypes":["int"] }, {"name":"setCleanStart","parameterTypes":["boolean"] }, {"name":"setClientNum","parameterTypes":["int"] }, {"name":"setClientPrefix","parameterTypes":["java.lang.String"] }, {"name":"setGroupName","parameterTypes":["java.lang.String"] }, {"name":"setOrdered","parameterTypes":["boolean"] }, {"name":"setPassword","parameterTypes":["java.lang.String"] }, {"name":"setSessionExpiryInterval","parameterTypes":["long"] }, {"name":"setUserName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"bifrore.starter.config.model.RPCClientConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getSslConfig","parameterTypes":[] }, {"name":"getWorkerThreads","parameterTypes":[] }]
},
{
  "name":"bifrore.starter.config.model.RPCServerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getHost","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getSslConfig","parameterTypes":[] }, {"name":"getWorkerThreads","parameterTypes":[] }, {"name":"setHost","parameterTypes":["java.lang.String"] }, {"name":"setPort","parameterTypes":["int"] }]
},
{
  "name":"bifrore.starter.config.model.SSLContextConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"bifrore.starter.config.model.ServerSSLContextConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"ch.qos.logback.classic.Level",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.filter.LevelFilter",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setLevel","parameterTypes":["ch.qos.logback.classic.Level"] }]
},
{
  "name":"ch.qos.logback.classic.filter.ThresholdFilter",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setLevel","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.FileOfCallerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineOfCallerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.ConsoleAppender",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.FileAppender",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.OutputStreamAppender",
  "methods":[{"name":"setEncoder","parameterTypes":["ch.qos.logback.core.encoder.Encoder"] }]
},
{
  "name":"ch.qos.logback.core.UnsynchronizedAppenderBase",
  "methods":[{"name":"addFilter","parameterTypes":["ch.qos.logback.core.filter.Filter"] }]
},
{
  "name":"ch.qos.logback.core.encoder.Encoder",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.encoder.LayoutWrappingEncoder",
  "methods":[{"name":"setParent","parameterTypes":["ch.qos.logback.core.spi.ContextAware"] }]
},
{
  "name":"ch.qos.logback.core.filter.AbstractMatcherFilter",
  "methods":[{"name":"setOnMatch","parameterTypes":["ch.qos.logback.core.spi.FilterReply"] }, {"name":"setOnMismatch","parameterTypes":["ch.qos.logback.core.spi.FilterReply"] }]
},
{
  "name":"ch.qos.logback.core.filter.Filter",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
  "methods":[{"name":"setPattern","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.rolling.RollingFileAppender",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setFile","parameterTypes":["java.lang.String"] }, {"name":"setRollingPolicy","parameterTypes":["ch.qos.logback.core.rolling.RollingPolicy"] }]
},
{
  "name":"ch.qos.logback.core.rolling.RollingPolicy",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.rolling.RollingPolicyBase",
  "methods":[{"name":"setFileNamePattern","parameterTypes":["java.lang.String"] }, {"name":"setParent","parameterTypes":["ch.qos.logback.core.FileAppender"] }]
},
{
  "name":"ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setMaxHistory","parameterTypes":["int"] }]
},
{
  "name":"ch.qos.logback.core.rolling.helper.DateTokenConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.spi.ContextAware",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.spi.FilterReply",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
  "fields":[{"name":"drainStatus"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BoundedLocalCache",
  "fields":[{"name":"refreshes"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.CacheLoader",
  "methods":[{"name":"loadAll","parameterTypes":["java.util.Set"] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.PS",
  "fields":[{"name":"key"}, {"name":"value"}]
},
{
  "name":"com.github.benmanes.caffeine.cache.PSMS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.SSMS",
  "methods":[{"name":"<init>","parameterTypes":["com.github.benmanes.caffeine.cache.Caffeine","com.github.benmanes.caffeine.cache.AsyncCacheLoader","boolean"] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.StripedBuffer",
  "fields":[{"name":"tableBusy"}]
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture",
  "fields":[{"name":"listeners"}, {"name":"value"}, {"name":"waiters"}]
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture$Waiter",
  "fields":[{"name":"next"}, {"name":"thread"}]
},
{
  "name":"com.google.protobuf.BoolValue",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.BytesValue",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.DoubleValue",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.ExtensionRegistry",
  "methods":[{"name":"getEmptyRegistry","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.FloatValue",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Int32Value",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Int64Value",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.ListValue",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.StringValue",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Struct",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.UInt32Value",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.UInt64Value",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Value",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.aggregation.impl.AggregatorDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.aws.AwsDiscoveryStrategyFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.azure.AzureDiscoveryStrategyFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.cache.impl.CacheDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.cardinality.impl.CardinalityEstimatorDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.client.HazelcastClient"
},
{
  "name":"com.hazelcast.client.impl.ClientDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.client.impl.ClientEndpointManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.client.impl.ClientEndpointManagerImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.cluster.Cluster",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.collection.LocalCollectionStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.collection.LocalSetStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.collection.impl.collection.CollectionDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.collection.impl.queue.QueueDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.config.ExecutorConfig",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["com.hazelcast.config.ExecutorConfig"] }]
},
{
  "name":"com.hazelcast.config.SetConfig",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["com.hazelcast.config.SetConfig"] }]
},
{
  "name":"com.hazelcast.dataconnection.impl.HazelcastDataConnectionRegistration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.dataconnection.impl.JdbcDataConnectionRegistration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.durableexecutor.impl.DurableExecutorDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.executor.impl.DistributedExecutorService$Processor",
  "fields":[{"name":"responseFlag"}]
},
{
  "name":"com.hazelcast.executor.impl.ExecutorDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.flakeidgen.impl.FlakeIdGeneratorDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.gcp.GcpDiscoveryStrategyFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.instance.GeneratedBuildProperties",
  "fields":[{"name":"ARTIFACT_ID"}, {"name":"BUILD"}, {"name":"COMMIT_ID"}, {"name":"DISTRIBUTION"}, {"name":"REVISION"}, {"name":"SERIALIZATION_VERSION"}, {"name":"VERSION"}]
},
{
  "name":"com.hazelcast.instance.GeneratedEnterpriseBuildProperties"
},
{
  "name":"com.hazelcast.instance.LocalInstanceStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.instance.impl.BuiltInLicenseHolder"
},
{
  "name":"com.hazelcast.instance.impl.DefaultNodeExtension",
  "methods":[{"name":"<init>","parameterTypes":["com.hazelcast.instance.impl.Node"] }]
},
{
  "name":"com.hazelcast.internal.ascii.TextProtocolsDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.cluster.ClusterClock",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.cluster.ClusterService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.cluster.ClusterStateListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.cluster.Versions",
  "allPublicFields":true
},
{
  "name":"com.hazelcast.internal.cluster.impl.ClusterClockImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getClusterStartTime","parameterTypes":[] }, {"name":"getClusterTime","parameterTypes":[] }, {"name":"getClusterTimeDiff","parameterTypes":[] }, {"name":"getClusterUpTime","parameterTypes":[] }, {"name":"getLocalClockTime","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.cluster.impl.ClusterDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.cluster.impl.ClusterHeartbeatManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.cluster.impl.ClusterServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getSize","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.config.ConfigDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.crdt.CRDTDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.journal.EventJournalDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.locksupport.LockDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.longregister.LongRegisterDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.longregister.LongRegisterServiceDescriptorProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.management.ManagementDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.memory.DefaultMemoryStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.memory.MemoryStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getCommittedHeap","parameterTypes":[] }, {"name":"getCommittedNative","parameterTypes":[] }, {"name":"getFreeHeap","parameterTypes":[] }, {"name":"getFreeNative","parameterTypes":[] }, {"name":"getFreePhysical","parameterTypes":[] }, {"name":"getMaxHeap","parameterTypes":[] }, {"name":"getMaxMetadata","parameterTypes":[] }, {"name":"getMaxNative","parameterTypes":[] }, {"name":"getTotalPhysical","parameterTypes":[] }, {"name":"getUsedHeap","parameterTypes":[] }, {"name":"getUsedMetadata","parameterTypes":[] }, {"name":"getUsedNative","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.metrics.DynamicMetricsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.metrics.StaticMetricsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.metrics.managementcenter.MetricsDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.monitor.impl.AbstractLocalCollectionStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.monitor.impl.GlobalIndexesStats",
  "fields":[{"name":"indexedQueryCount"}, {"name":"queryCount"}]
},
{
  "name":"com.hazelcast.internal.monitor.impl.LocalExecutorStatsImpl",
  "fields":[{"name":"cancelled"}, {"name":"completed"}, {"name":"pending"}, {"name":"started"}, {"name":"totalExecutionTime"}, {"name":"totalStartLatency"}]
},
{
  "name":"com.hazelcast.internal.monitor.impl.LocalMapStatsImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getMaxGetLatency","parameterTypes":[] }, {"name":"getMaxPutLatency","parameterTypes":[] }, {"name":"getMaxRemoveLatency","parameterTypes":[] }, {"name":"getMaxSetLatency","parameterTypes":[] }, {"name":"getTotalGetLatency","parameterTypes":[] }, {"name":"getTotalPutLatency","parameterTypes":[] }, {"name":"getTotalRemoveLatency","parameterTypes":[] }, {"name":"getTotalSetLatency","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.monitor.impl.LocalRecordStoreStatsImpl",
  "fields":[{"name":"evictionCount"}, {"name":"expirationCount"}, {"name":"hits"}, {"name":"lastAccessTime"}, {"name":"lastUpdateTime"}]
},
{
  "name":"com.hazelcast.internal.monitor.impl.LocalReplicationStatsImpl",
  "fields":[{"name":"diffPartitionReplicationCount"}, {"name":"diffPartitionReplicationRecordsCount"}, {"name":"fullPartitionReplicationCount"}, {"name":"fullPartitionReplicationRecordsCount"}]
},
{
  "name":"com.hazelcast.internal.monitor.impl.LocalSetStatsImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.networking.Networking",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.networking.nio.NioNetworking",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.networking.nio.NioThread",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"idleTimeMillis","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.networking.nio.iobalancer.IOBalancer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.nio.ClassLoaderUtil$IrresolvableConstructor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.nio.ConnectionListenable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.nio.ConnectionListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.partition.IPartitionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.partition.InternalPartitionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.partition.PartitionAwareService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.partition.PartitionReplicaVersionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getMaxAllowedBackupCount","parameterTypes":[] }, {"name":"getMigrationQueueSize","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.partition.impl.MigrationManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.partition.impl.MigrationManagerImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"migrationActiveProbe","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.partition.impl.MigrationStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getElapsedDestinationCommitTimeNanoseconds","parameterTypes":[] }, {"name":"getElapsedMigrationOperationTimeNanoseconds","parameterTypes":[] }, {"name":"getElapsedMigrationTimeNanoseconds","parameterTypes":[] }, {"name":"getTotalElapsedDestinationCommitTimeNanoseconds","parameterTypes":[] }, {"name":"getTotalElapsedMigrationOperationTimeNanoseconds","parameterTypes":[] }, {"name":"getTotalElapsedMigrationTimeNanoseconds","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.partition.impl.PartitionDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.partition.impl.PartitionReplicaManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.partition.impl.PartitionStateManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.partition.impl.PartitionStateManagerImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"activePartitionCount","parameterTypes":[] }, {"name":"localPartitionCount","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.serialization.impl.compact.schema.SchemaDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.server.ServerConnectionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.server.tcp.TcpServer$MetricsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.server.tcp.TcpServerAcceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"idleTimeMillis","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.server.tcp.TcpServerConnectionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"connectionCount","parameterTypes":[] }, {"name":"connectionsInProgress","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.server.tcp.TcpServerConnectionManagerBase",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.services.ClientAwareService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.services.CoreService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.services.GracefulShutdownAwareService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.services.ManagedService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.services.MembershipAwareService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.services.PostJoinAwareService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.services.PreJoinAwareService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.services.TransactionalService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.usercodedeployment.impl.UserCodeDeploymentSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.LatencyDistribution",
  "fields":[{"name":"count"}, {"name":"maxMicros"}, {"name":"totalMicros"}]
},
{
  "name":"com.hazelcast.internal.util.collection.UtilCollectionSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.counters.MwCounter",
  "fields":[{"name":"value"}]
},
{
  "name":"com.hazelcast.internal.util.counters.SwCounter",
  "fields":[{"name":"value"}]
},
{
  "name":"com.hazelcast.internal.util.executor.CachedExecutorServiceDelegate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.util.executor.CompletableFutureTask",
  "fields":[{"name":"runner"}]
},
{
  "name":"com.hazelcast.internal.util.executor.HazelcastManagedThread",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.util.executor.ManagedExecutorService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getCompletedTaskCount","parameterTypes":[] }, {"name":"getMaximumPoolSize","parameterTypes":[] }, {"name":"getPoolSize","parameterTypes":[] }, {"name":"getQueueSize","parameterTypes":[] }, {"name":"getRemainingQueueCapacity","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.executor.NamedThreadPoolExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.internal.util.phonehome.BuildInfoProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.CacheMetricsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.ClientMetricsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.ClientRoutingModeMetricsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.CloudInfoProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.ClusterMetricsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.DistributedObjectMetricsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.DynamicConfigMetricsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.JetMetricsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.MapMetricsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.OSInfoProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.RestApiMetricsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.SqlMetricsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.StorageMetricsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.UserCodeNamespacesMetricsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.internal.util.phonehome.VMMetricsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$DoubleAccHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LinTrendAccHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LongAccHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LongDoubleAccHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LongLongAccHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$MutableReferenceHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$PickAnyAccHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.config.JetConfigDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.core.CoreSerializerHooks$JetEventHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.core.CoreSerializerHooks$WatermarkHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.core.JetDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.core.metrics.MetricsDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.datamodel.DataModelSerializerHooks$ItemsByTagHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.datamodel.DataModelSerializerHooks$KeyedWindowResultHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.datamodel.DataModelSerializerHooks$TagHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.datamodel.DataModelSerializerHooks$TimestampedItemHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple2Hook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple3Hook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple4Hook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple5Hook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.datamodel.DataModelSerializerHooks$WindowResultHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.impl.aggregate.AggregateDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.impl.client.protocol.task.JetMessageTaskFactoryProvider",
  "methods":[{"name":"<init>","parameterTypes":["com.hazelcast.spi.impl.NodeEngine"] }]
},
{
  "name":"com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$BroadcastEntryHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$BroadcastKeyHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$DoneItemHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$SnapshotBarrierHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.impl.execution.init.CustomClassLoadedObject$Hook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.impl.execution.init.JetInitDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.impl.metrics.JetMetricsDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.impl.observer.JetObserverDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.impl.util.FunctionsSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.jet.json.JsonSerializerHooks$DeferredMapHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.json.internal.JsonDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.kubernetes.HazelcastKubernetesDiscoveryStrategyFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.logging.Logger",
  "methods":[{"name":"getLogger","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.hazelcast.logging.Slf4jFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.map.LocalMapStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.map.impl.EECompatMapDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.map.impl.MapDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.map.impl.record.CachedSimpleRecord",
  "fields":[{"name":"cachedValue"}]
},
{
  "name":"com.hazelcast.multimap.impl.MultiMapDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.projection.impl.ProjectionDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.query.impl.predicates.PredicateDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.replicatedmap.impl.operation.ReplicatedMapDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.ringbuffer.impl.RingbufferDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.scheduledexecutor.impl.ScheduledExecutorDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.shaded.org.jctools.queues.MpmcArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"com.hazelcast.shaded.org.jctools.queues.MpmcArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"com.hazelcast.spi.discovery.multicast.MulticastDiscoveryStrategyFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.spi.impl.AbstractInvocationFuture",
  "fields":[{"name":"state"}]
},
{
  "name":"com.hazelcast.spi.impl.SpiDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.spi.impl.eventservice.EventPublishingService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.eventservice.EventService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"eventsProcessed","parameterTypes":[] }, {"name":"getEventQueueSize","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.merge.SplitBrainDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.spi.impl.operationexecutor.OperationExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.operationexecutor.OperationHostileThread",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.operationexecutor.OperationRunner",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getExecutedOperationCount","parameterTypes":[] }, {"name":"getGenericPriorityQueueSize","parameterTypes":[] }, {"name":"getGenericQueueSize","parameterTypes":[] }, {"name":"getGenericThreadCount","parameterTypes":[] }, {"name":"getPartitionThreadCount","parameterTypes":[] }, {"name":"getPriorityQueueSize","parameterTypes":[] }, {"name":"getQueueSize","parameterTypes":[] }, {"name":"getRunningGenericOperationCount","parameterTypes":[] }, {"name":"getRunningOperationCount","parameterTypes":[] }, {"name":"getRunningPartitionOperationCount","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.spi.impl.operationexecutor.impl.OperationThread",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"normalPendingCount","parameterTypes":[] }, {"name":"priorityPendingCount","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.spi.impl.operationparker.OperationParker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getParkQueueCount","parameterTypes":[] }, {"name":"getTotalParkedOperationCount","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.spi.impl.operationservice.LiveOperationsTracker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.operationservice.Operation",
  "fields":[{"name":"callId"}]
},
{
  "name":"com.hazelcast.spi.impl.operationservice.OperationService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.operationservice.impl.BaseInvocation",
  "fields":[{"name":"backupsAcksReceived"}]
},
{
  "name":"com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"responseQueueSize","parameterTypes":[] }, {"name":"responsesBackup","parameterTypes":[] }, {"name":"responsesError","parameterTypes":[] }, {"name":"responsesMissing","parameterTypes":[] }, {"name":"responsesNormal","parameterTypes":[] }, {"name":"responsesTimeout","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.spi.impl.operationservice.impl.Invocation",
  "fields":[{"name":"responseReceived"}]
},
{
  "name":"com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getLastCallId","parameterTypes":[] }, {"name":"invocationsUsedPercentage","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.proxyservice.InternalProxyService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.proxyservice.ProxyService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getProxyCount","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.sql.impl.SqlDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.topic.impl.TopicDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.transaction.TransactionManagerService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.transaction.impl.TransactionDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hazelcast.transaction.impl.TransactionManagerServiceImpl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"com.hazelcast.wan.impl.WanDataSerializerHook",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.hivemq.client.internal.mqtt.codec.decoder.MqttDecoder"
},
{
  "name":"com.hivemq.client.internal.mqtt.codec.encoder.MqttEncoder",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"com.hivemq.client.internal.mqtt.handler.MqttChannelInitializer"
},
{
  "name":"com.hivemq.client.internal.mqtt.handler.MqttConnectionAwareHandler",
  "methods":[{"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"com.hivemq.client.internal.mqtt.handler.auth.MqttDisconnectOnAuthHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"com.hivemq.client.internal.mqtt.handler.connect.MqttConnectHandler",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"com.hivemq.client.internal.mqtt.handler.disconnect.MqttDisconnectHandler",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"com.hivemq.client.internal.mqtt.handler.ping.MqttPingHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"com.hivemq.client.internal.mqtt.handler.publish.incoming.MqttIncomingQosHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"com.hivemq.client.internal.mqtt.handler.publish.outgoing.MqttOutgoingQosHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"com.hivemq.client.internal.mqtt.handler.subscribe.MqttSubscriptionHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"com.hivemq.client.internal.netty.DefaultChannelOutboundHandler",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"com.ibm.lang.management.OperatingSystemMXBean"
},
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ARCFOURCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DESedeCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.DHParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.GaloisCounterMode$AESGCM",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.HmacCore$HmacSHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.management.GarbageCollectionNotificationInfo"
},
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.GcInfo",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getVMOption","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.sun.management.OperatingSystemMXBean",
  "methods":[{"name":"getCpuLoad","parameterTypes":[] }, {"name":"getFreePhysicalMemorySize","parameterTypes":[] }, {"name":"getProcessCpuLoad","parameterTypes":[] }, {"name":"getSystemCpuLoad","parameterTypes":[] }, {"name":"getTotalPhysicalMemorySize","parameterTypes":[] }]
},
{
  "name":"com.sun.management.ThreadMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"com.sun.management.VMOption",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getName","parameterTypes":[] }, {"name":"getOrigin","parameterTypes":[] }, {"name":"getValue","parameterTypes":[] }, {"name":"isWriteable","parameterTypes":[] }]
},
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"getCommittedVirtualMemorySize","parameterTypes":[] }, {"name":"getFreeSwapSpaceSize","parameterTypes":[] }, {"name":"getMaxFileDescriptorCount","parameterTypes":[] }, {"name":"getOpenFileDescriptorCount","parameterTypes":[] }, {"name":"getProcessCpuLoad","parameterTypes":[] }, {"name":"getProcessCpuTime","parameterTypes":[] }, {"name":"getTotalSwapSpaceSize","parameterTypes":[] }]
},
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"groovy.lang.Binding"
},
{
  "name":"io.grpc.census.InternalCensusStatsAccessor"
},
{
  "name":"io.grpc.census.InternalCensusTracingAccessor"
},
{
  "name":"io.grpc.internal.DnsNameResolverProvider"
},
{
  "name":"io.grpc.internal.PickFirstLoadBalancerProvider"
},
{
  "name":"io.grpc.internal.SerializingExecutor",
  "fields":[{"name":"runState"}]
},
{
  "name":"io.grpc.netty.AbstractNettyHandler",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.grpc.netty.NettyClientHandler",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.grpc.netty.NettyServer$1"
},
{
  "name":"io.grpc.netty.NettyServerHandler",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.grpc.netty.ProtocolNegotiators$GrpcNegotiationHandler",
  "methods":[{"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.grpc.netty.ProtocolNegotiators$ProtocolNegotiationHandler",
  "methods":[{"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.grpc.netty.ProtocolNegotiators$WaitUntilActiveHandler",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.grpc.netty.WriteBufferingAndExceptionHandler",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.grpc.override.ContextStorageOverride"
},
{
  "name":"io.grpc.util.RoundRobinLoadBalancer$ReadyPicker",
  "fields":[{"name":"index"}]
},
{
  "name":"io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.distribution.TimeWindowMax",
  "fields":[{"name":"rotating"}]
},
{
  "name":"io.micrometer.core.instrument.distribution.TimeWindowSum",
  "fields":[{"name":"rotating"}]
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$1"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.netty.channel.AbstractChannelHandlerContext",
  "fields":[{"name":"handlerState"}]
},
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[{"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelOutboundBuffer",
  "fields":[{"name":"totalPendingSize"}, {"name":"unwritable"}]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.netty.channel.DefaultChannelConfig",
  "fields":[{"name":"autoRead"}, {"name":"writeBufferWaterMark"}]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline",
  "fields":[{"name":"estimatorHandle"}]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[{"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.DefaultFileRegion"
},
{
  "name":"io.netty.channel.epoll.Epoll",
  "methods":[{"name":"isAvailable","parameterTypes":[] }, {"name":"unavailabilityCause","parameterTypes":[] }]
},
{
  "name":"io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
},
{
  "name":"io.netty.channel.socket.nio.NioSocketChannel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.channel.unix.PeerCredentials"
},
{
  "name":"io.netty.handler.codec.ByteToMessageDecoder",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.haproxy.HAProxyMessageDecoder"
},
{
  "name":"io.netty.handler.codec.http.HttpObjectDecoder",
  "methods":[{"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.http.HttpObjectEncoder",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.http2.Http2ConnectionHandler",
  "methods":[{"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.netty.resolver.dns.Cache$Entries",
  "fields":[{"name":"expirationFuture"}]
},
{
  "name":"io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider"
},
{
  "name":"io.netty.util.AbstractReferenceCounted",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.netty.util.DefaultAttributeMap",
  "fields":[{"name":"attributes"}]
},
{
  "name":"io.netty.util.Recycler$DefaultHandle",
  "fields":[{"name":"state"}]
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.util.concurrent.DefaultPromise",
  "fields":[{"name":"result"}]
},
{
  "name":"io.netty.util.concurrent.SingleThreadEventExecutor",
  "fields":[{"name":"state"}, {"name":"threadProperties"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.perfmark.impl.SecretPerfMarkImpl$PerfMarkImpl"
},
{
  "name":"io.vertx.core.eventbus.impl.EventBusImpl",
  "fields":[{"name":"inboundInterceptors"}, {"name":"outboundInterceptors"}]
},
{
  "name":"io.vertx.core.http.impl.Http1xOrH2CHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.vertx.core.http.impl.Http1xUpgradeToH2CHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.vertx.core.http.impl.HttpServerWorker$1",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.vertx.core.http.impl.VertxHttpRequestDecoder"
},
{
  "name":"io.vertx.core.http.impl.VertxHttpResponseEncoder"
},
{
  "name":"io.vertx.core.logging.SLF4JLogDelegateFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.vertx.core.net.impl.ServerChannelLoadBalancer"
},
{
  "name":"io.vertx.core.net.impl.VertxHandler",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.vertx.ext.web.impl.RoutingContextImpl",
  "fields":[{"name":"handlerSeq"}]
},
{
  "name":"io.vertx.ext.web.impl.RoutingContextImplBase",
  "fields":[{"name":"currentRouteNextFailureHandlerIndex"}, {"name":"currentRouteNextHandlerIndex"}]
},
{
  "name":"java.io.FileDescriptor"
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.lang.AutoCloseable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Boolean",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Class",
  "methods":[{"name":"getModule","parameterTypes":[] }, {"name":"getRecordComponents","parameterTypes":[] }]
},
{
  "name":"java.lang.Deprecated",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Double",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Float",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Integer",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Iterable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Long",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Module",
  "methods":[{"name":"getName","parameterTypes":[] }, {"name":"isOpen","parameterTypes":["java.lang.String","java.lang.Module"] }]
},
{
  "name":"java.lang.ModuleLayer",
  "methods":[{"name":"boot","parameterTypes":[] }, {"name":"modules","parameterTypes":[] }]
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.ProcessHandle",
  "methods":[{"name":"current","parameterTypes":[] }, {"name":"pid","parameterTypes":[] }]
},
{
  "name":"java.lang.Record",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Runnable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.StackTraceElement",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.String",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Thread",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"threadLocalRandomProbe"}]
},
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.management.BufferPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.CompilationMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.LockInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.management.MemoryMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.MonitorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getLoggerLevel","parameterTypes":["java.lang.String"] }, {"name":"getLoggerNames","parameterTypes":[] }, {"name":"getParentLoggerName","parameterTypes":["java.lang.String"] }, {"name":"setLoggerLevel","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.management.ThreadInfo",
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.reflect.AccessibleObject",
  "fields":[{"name":"override"}]
},
{
  "name":"java.lang.reflect.RecordComponent",
  "methods":[{"name":"getName","parameterTypes":[] }, {"name":"getType","parameterTypes":[] }]
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketException",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.SocketTimeoutException",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","long"] }]
},
{
  "name":"java.nio.channels.FileChannel"
},
{
  "name":"java.nio.channels.spi.SelectorProvider",
  "methods":[{"name":"openServerSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }, {"name":"openSocketChannel","parameterTypes":["java.net.ProtocolFamily"] }]
},
{
  "name":"java.security.AlgorithmParametersSpi"
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.KeyStoreSpi"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.security.interfaces.RSAPrivateKey"
},
{
  "name":"java.security.interfaces.RSAPublicKey"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.util.concurrent.AbstractExecutorService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.Executor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.ExecutorService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.ForkJoinTask",
  "fields":[{"name":"aux"}, {"name":"status"}]
},
{
  "name":"java.util.concurrent.ThreadPoolExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicReference",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.LongAdder",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"add","parameterTypes":["long"] }, {"name":"sum","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.atomic.Striped64",
  "fields":[{"name":"base"}, {"name":"cellsBusy"}]
},
{
  "name":"java.util.function.Consumer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.function.Supplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]
},
{
  "name":"java.util.logging.LoggingMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"javax.cache.Caching"
},
{
  "name":"javax.management.MBeanOperationInfo",
  "queryAllPublicMethods":true,
  "methods":[{"name":"getSignature","parameterTypes":[] }]
},
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.management.StandardEmitterMBean",
  "methods":[{"name":"cacheMBeanInfo","parameterTypes":["javax.management.MBeanInfo"] }, {"name":"getCachedMBeanInfo","parameterTypes":[] }, {"name":"getMBeanInfo","parameterTypes":[] }]
},
{
  "name":"javax.management.openmbean.CompositeData"
},
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"
},
{
  "name":"javax.management.openmbean.TabularData"
},
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]
},
{
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"cacheMBeanInfo","parameterTypes":["javax.management.MBeanInfo"] }, {"name":"getCachedMBeanInfo","parameterTypes":[] }, {"name":"getMBeanInfo","parameterTypes":[] }, {"name":"getNotificationInfo","parameterTypes":[] }]
},
{
  "name":"jdk.management.jfr.RecordingInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "queryAllPublicMethods":true
},
{
  "name":"jdk.net.ExtendedSocketOptions",
  "fields":[{"name":"TCP_KEEPCOUNT"}, {"name":"TCP_KEEPIDLE"}, {"name":"TCP_KEEPINTERVAL"}]
},
{
  "name":"libcore.io.Memory"
},
{
  "name":"org.apache.kafka.common.serialization.ByteArraySerializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.kafka.common.utils.AppInfoParser$AppInfo",
  "queryAllPublicConstructors":true
},
{
  "name":"org.apache.kafka.common.utils.AppInfoParser$AppInfoMBean",
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.kafka.shaded.com.google.protobuf.ExtensionRegistry",
  "methods":[{"name":"getEmptyRegistry","parameterTypes":[] }]
},
{
  "name":"org.jctools.queues.BaseSpscLinkedArrayQueueConsumerField",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"org.jctools.queues.BaseSpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"org.robolectric.Robolectric"
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"sun.management.ClassLoadingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.CompilationImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryManagerImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.MemoryPoolImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.management.RuntimeImpl",
  "queryAllPublicConstructors":true
},
{
  "name":"sun.misc.SharedSecrets"
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[{"name":"arrayBaseOffset","parameterTypes":["java.lang.Class"] }, {"name":"arrayIndexScale","parameterTypes":["java.lang.Class"] }, {"name":"copyMemory","parameterTypes":["long","long","long"] }, {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"getBoolean","parameterTypes":["java.lang.Object","long"] }, {"name":"getByte","parameterTypes":["long"] }, {"name":"getByte","parameterTypes":["java.lang.Object","long"] }, {"name":"getDouble","parameterTypes":["java.lang.Object","long"] }, {"name":"getFloat","parameterTypes":["java.lang.Object","long"] }, {"name":"getInt","parameterTypes":["long"] }, {"name":"getInt","parameterTypes":["java.lang.Object","long"] }, {"name":"getLong","parameterTypes":["long"] }, {"name":"getLong","parameterTypes":["java.lang.Object","long"] }, {"name":"getObject","parameterTypes":["java.lang.Object","long"] }, {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }, {"name":"objectFieldOffset","parameterTypes":["java.lang.reflect.Field"] }, {"name":"putBoolean","parameterTypes":["java.lang.Object","long","boolean"] }, {"name":"putByte","parameterTypes":["long","byte"] }, {"name":"putByte","parameterTypes":["java.lang.Object","long","byte"] }, {"name":"putDouble","parameterTypes":["java.lang.Object","long","double"] }, {"name":"putFloat","parameterTypes":["java.lang.Object","long","float"] }, {"name":"putInt","parameterTypes":["long","int"] }, {"name":"putInt","parameterTypes":["java.lang.Object","long","int"] }, {"name":"putLong","parameterTypes":["long","long"] }, {"name":"putLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"putObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, {"name":"storeFence","parameterTypes":[] }]
},
{
  "name":"sun.misc.VM"
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[{"name":"publicSelectedKeys"}, {"name":"selectedKeys"}]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA224withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.DSA$SHA256withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$DualFormatJKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA5$SHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.certpath.PKIXCertPathValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.PSSParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAPSSSignature",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA224withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSASignature$SHA256withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.KeyManagerFactoryImpl$SunX509",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.SSLContextImpl$DefaultSSLContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.util.ObjectIdentifier"
},
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.CertificateExtensions"
},
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
},
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]
}
]
